name: Install MQTT simulator
description: Install MQTT simulator

inputs:
  pub_dl_url:
    required: true
    description: 'A secrets'
  azure_blob_url:
    required: true
    description: 'A secrets'
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # - name: Install Rust
    #   uses: actions-rust-lang/setup-rust-toolchain@v1
    #   with:
    #     toolchain: ${{ inputs.rust-version }}

    # - name: Generate GitHub App Token
    #   id: app-token
    #   uses: tibdex/github-app-token@v1
    #   with:
    #     app_id: ${{ inputs.res_app_id }}
    #     private_key: ${{ inputs.res_app_key }}

    # - name: Set GitHub App Token as secret
    #   run: echo "GITHUB_APP_TOKEN=${{ steps.app-token.outputs.token }}" >> $GITHUB_ENV
    #   shell: bash


    # - name: Check out another private repository
    #   uses: actions/checkout@v4
    #   with:
    #     repository: taosdata/taosx  # 替换为你要拉取的私有仓库
    #     token: ${{ env.GITHUB_APP_TOKEN }}  # 使用 GitHub App 生成的访问令牌
    #     path: taosx
    #     ref: '3.0'

    # - name: Build MQTT CLI
    #   run: |
    #     apt install -y llvm gcc make cmake libssl-dev pkg-config perl g++
    #     cd taosx && cargo build --release -p taosx-tools --bin mqtt_pub
    #   shell: bash
    - name: Set up variables
      shell: bash
      run: |
        wget -N ${{ inputs.pub_dl_url }}/binary_tools/mqtt_pub
        if [ $? -ne 0 ]; then
          echo "Error: Failed to download mqtt_pub" >&2
          exit 1
        fi
        CSV_DL_URL="${{ inputs.azure_blob_url }}/test-data/battery_storage_data.csv.tar.gz"
        OUTPUT_FILE="/opt/battery_storage_data.csv"
        if [ -f "$OUTPUT_FILE" ]; then
            echo "mqtt csv already exists, skipping download."
            exit 0
        fi

        if ! wget -O "${OUTPUT_FILE}.tar.gz" "$CSV_DL_URL"; then
            echo "::error ::Failed to download mqtt csv from $CSV_DL_URL"
            exit 1
        fi

        echo "Successfully downloaded mqtt csv."
        ls -al /opt/*
        du -sh /opt/*

        cd /opt &&  tar -xvf /opt/battery_storage_data.csv.tar.gz