name: Deploy MinIO

inputs:
  MINIO_ROOT_USER:
    required: true
    type: string
    description: 'MINIO_ROOT_USER, e.g., admin'
  MINIO_ROOT_PASSWORD:
    required: true
    type: string
    description: 'MINIO_ROOT_PASSWORD, e.g., admin123456'
  MINIO_ACCESS_KEY:
    required: true
    type: string
    description: 'MINIO_ACCESS_KEY, e.g., LbQ88Tub************'
  MINIO_SECRET_KEY:
    required: true
    type: string
    description: 'MINIO_SECRET_KEY, e.g., 7e7b1b1b************'

runs:
  using: 'composite'
  steps:
    - name: Install MinIO Server
      shell: bash
      run: |
        if [ ! -f /usr/local/bin/minio ]; then
          wget https://dl.min.io/server/minio/release/linux-amd64/minio
          chmod +x minio
          mv minio /usr/local/bin/
        fi

    - name: Create Data Directory
      shell: bash
      run: mkdir -p /mnt/data

    - name: Set Environment Variables
      shell: bash
      run: |
        echo "MINIO_ROOT_USER=${{ inputs.MINIO_ROOT_USER }}" >> $GITHUB_ENV
        echo "MINIO_ROOT_PASSWORD=${{ inputs.MINIO_ROOT_PASSWORD }}" >> $GITHUB_ENV

    - name: Start MinIO Server
      shell: bash
      run: |
        export MINIO_ROOT_USER=${{ inputs.MINIO_ROOT_USER }}
        export MINIO_ROOT_PASSWORD=${{ inputs.MINIO_ROOT_PASSWORD }}
        minio server /mnt/data --console-address ":9001" > $HOME/minio.log 2>&1 &

    - name: Check MinIO Server is up
      shell: bash
      run: |
        until curl -s http://localhost:9000/minio/health/live; do
          echo 'Waiting for MinIO to start...'
          sleep 5
        done

    - name: Install MinIO Client
      shell: bash
      run: |
        if [ ! -f /usr/local/bin/mc ]; then
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          mv mc /usr/local/bin/
        fi

    - name: Create Bucket and Access Key
      shell: bash
      run: |
        mc mb myminio/td-bucket
        mc admin accesskey create  myminio/ admin --access-key ${{ inputs.MINIO_ACCESS_KEY }} --secret-key ${{ inputs.MINIO_SECRET_KEY }}

    - name: Capture logs
      shell: bash
      run: |
        tail -f $HOME/minio.log > minio-runtime.log &
        echo "Tailing MinIO logs to 'minio-runtime.log'"

    - name: Upload logs as artifact
      uses: actions/upload-artifact@v4
      with:
        name: minio-logs
        path: minio-runtime.log