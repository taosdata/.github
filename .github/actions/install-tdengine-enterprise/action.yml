name: Install TDengine Enterprise
description: Install TDengine Enterprise and start the service
inputs:
  version:
    required: true
    description: 'Version number, e.g., 3.3.5.1'
  nas_download_url:
    required: true
    description: 'A secrets'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up variables
      shell: bash
      run: |
        VERSION=${{ inputs.version }}
        BASE_URL=${{ inputs.nas_download_url }}

        # Get major version
        MAJOR_VERSION=$(echo $VERSION | cut -d '.' -f 1-2)

        # Get download URL
        URL="${BASE_URL}/${MAJOR_VERSION}/v${VERSION}/enterprise/TDengine-enterprise-${VERSION}-Linux-x64.tar.gz"
        echo "Download URL: $URL"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "URL=$URL" >> $GITHUB_ENV

    - name: Download TDengine
      shell: bash
      run: |
        if ! wget "$URL"; then
          echo "::error ::Failed to download TDengine from $URL"
          exit 1
        fi

    - name: Extract TDengine
      shell: bash
      run: |
        if ! tar -xzvf "TDengine-enterprise-${VERSION}-Linux-x64.tar.gz"; then
          echo "::error ::Failed to extract TDengine archive"
          exit 1
        fi

    - name: Install TDengine
      shell: bash
      run: |
        cd "TDengine-enterprise-${VERSION}" || {
          echo "::error ::Failed to enter TDengine directory"
          exit 1
        }
        ./install.sh -e no
        # echo 'e no' | ./install.sh
        # if ! echo 'e no' | ./install.sh; then
        #   echo "::error ::Failed to install TDengine"
        #   exit 1
        # fi

    - name: Clean up temporary files
      shell: bash
      run: |
        rm -f "TDengine-enterprise-${VERSION}-Linux-x64.tar.gz"
        rm -rf "TDengine-enterprise-${VERSION}"