name: 'Manage Runner Labels'
inputs:
  gh_token:
    description: 'GitHub access token'
    required: true
    default: 'A secret'
  operation_type:
    description: 'add/delete'
    required: true
    default: 'add'
  labels:
    description: 'Comma-separated labels'
    required: true
  runner_name:
    description: 'Runner name'
    required: true
  scope:
    description: 'Runner scope (org/repo)'
    default: 'org'
  target:
    description: 'Organization name or repo slug'
    default: 'taosdata'
runs:
  using: "composite"
  steps:
    - name: Manage Runner Labels
      shell: bash
      run: |
        # Validate scope and target format
        if [[ "${{ inputs.scope }}" == "repo" && "${{ inputs.target }}" != */* ]]; then
          echo "::error::Repo target must be in 'owner/repo' format"
          exit 1
        elif [[ "${{ inputs.scope }}" != "org" && "${{ inputs.scope }}" != "repo" ]]; then
          echo "::error::Invalid scope: must be 'org' or 'repo'"
          exit 1
        fi

        # Construct API URL
        if [[ "${{ inputs.scope }}" == "org" ]]; then
          API_URL="https://api.github.com/orgs/${{ inputs.target }}/actions/runners"
        else
          API_URL="https://api.github.com/repos/${{ inputs.target }}/actions/runners"
        fi
        response=$(curl -sS -H "Authorization: Bearer ${{ inputs.gh_token }}" "$API_URL")

        RUNNER_ID=$(echo "$response" | jq -r ".runners[] | select(.name == \"${{ inputs.runner_name }}\") | .id")
        echo "runner id: $RUNNER_ID"
        if [[ "${{ inputs.labels }}" == "ems-center-node" ]];then
          label=ems-center-1
        else
          label="${{ inputs.labels }}"
        if [[ "${{ inputs.labels }}" == "ems-mqtt-node" ]];then
          label=ems-mqtt-1
        else
          label="${{ inputs.labels }}"
        case "${{ inputs.operation_type }}" in
          add)
            JSON_DATA=$(echo "$label" | jq -R 'split(",")' | jq -c '{labels: .}')
            # Add labels to runner
            curl -X POST -sS \
              -H "Authorization: token ${{ inputs.gh_token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "$API_URL/$RUNNER_ID/labels" \
              -d "$JSON_DATA"

            echo "Added labels: ${{ inputs.labels }}"
            ;;

          delete)
            IFS=',' read -ra LABELS <<< "${{ inputs.labels }}"
            for label in "${LABELS[@]}"; do
              curl -X DELETE -sS \
                -H "Authorization: token ${{ inputs.gh_token }}" \
                "$API_URL/$RUNNER_ID/labels/${label// /%20}" \
                -o /dev/null

              echo "Deleted label: $label"
            done
            ;;
        esac
