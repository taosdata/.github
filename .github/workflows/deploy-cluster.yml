name: Deploy TDengine Cluster

on:
  push:
    branches:
      - test/fractal

# on:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Enter the version of TDengine to install'
#         required: true
#         default: '3.3.5.1'
#       group:
#         description: 'Enter the group for the runner'
#         required: true
#         default: 'default'
#       dnode_count:
#         description: 'Number of nodes to deploy'
#         required: true
#         default: '2'

permissions: read-all

jobs:
  find-runners:
    runs-on: ubuntu-latest
    outputs:
      runners: ${{ steps.get-runners.outputs.runners }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Available Runners
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: get-runners
        run: |
          echo "Fetching available runners..."
          response=$(gh api /repos/${{ github.repository }}/actions/runners/list)
          if [ -z "$response" ]; then
            echo "No response from GitHub API"
            exit 1
          else
            echo "Response from GitHub API: $response"
          fi
          available_runners=$(gh api /repos/${{ github.repository }}/actions/runners/list | jq -r '.runners[] | select(.labels | any(.name | contains("fractal") or contains("edge_td"))) | {name: .name, ip: .ip_address}')
          echo "Available runners: $available_runners"
          echo "runners=$available_runners" >> $GITHUB_OUTPUT

  # call-install:
  #   runs-on:
  #     group: ${{ github.event.inputs.group }}
  #     labels: ${{ fromJson(github.event.inputs.labels) }}
  #   steps:
  #     - name: Check and Install TDengine Enterprise
  #       uses: taosdata/.github/.github/actions/install-tdengine@test/fractal
  #       with:
  #         version: ${{ github.event.inputs.version }}
  #         group: ${{ github.event.inputs.group }}
  #         labels: ${{ github.event.inputs.labels }}
  #         NAS_DOWNLOAD_URL: ${{ secrets.NAS_DOWNLOAD_URL }}
