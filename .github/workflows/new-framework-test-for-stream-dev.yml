name: New Framework Tests

on:
  workflow_call:
    inputs:
      tdinternal:
        description: 'Is the PR from TDinternal?'
        required: true
        type: boolean
      specified_source_branch:
        description: 'Enter the source branch name of TDengine'
        required: false
        default: 'unavailable'
        type: string
      specified_target_branch:
        description: 'Enter the target branch name of TDengine'
        required: false
        default: 'unavailable'
        type: string
      specified_pr_number:
        description: 'Enter the PR number of TDengine'
        required: false
        default: 'unavailable'
        type: string

jobs:
  validate_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Get all changed case files
        id: changed-case-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            test/cases/**/test_*.py

      - name: Validate test files
        if: steps.changed-case-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-case-files.outputs.all_changed_files }}
        run: |
          EXIT_CODE=0
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            python .github/scripts/validate_tests.py "$file" || EXIT_CODE=1
          done
          exit $EXIT_CODE

  run-tests:
    strategy:
      fail-fast: false
      matrix:
        platform: [linux]
        include:
          - platform: linux
            runner_group: CI
            runner_labels: [self-hosted, Linux, X64, new-framework]
    runs-on:
      group: ${{ matrix.runner_group }}
      labels: ${{ matrix.runner_labels }}

    needs: validate_tests

    timeout-minutes: 200

    env:
      CONTAINER_NAME: 'taosd-test'
      WKDIR: '/var/lib/jenkins/workspace'
      WK: '/var/lib/jenkins/workspace/TDinternal'
      WKC: '/var/lib/jenkins/workspace/TDinternal/community'
      IS_TDINTERNAL: ${{ inputs.tdinternal }}
      CURRENT_PLATFORM: ${{ matrix.platform }}
      TARGET_BRANCH: ${{ inputs.specified_target_branch }}

    defaults:
      run:
        working-directory: ${{ github.workspace }}/.github/scripts/

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          repository: 'taosdata/.github'
          ref: 'feat/TS-6100-3.0'
          fetch-depth: 0

      - name: Prepare the environment
        run: python3 prepare.py
        env:
          WKDIR: ${{ env.WKDIR }}
          IS_TDINTERNAL: ${{ inputs.tdinternal }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          GITHUB_EVENT: ${{ toJson(github.event) }}
          GITHUB_INPUTS: ${{ toJson(inputs) }}

      - name: Build docker or repo
        run: python3 build.py
        env:
          BUILD_TYPE: ${{ matrix.platform == 'macos' && 'repo' || 'docker' }}

      - name: Run function test cases
        run: python3 test-for-stream-dev.py
        env:
          TEST_TYPE: 'function'
