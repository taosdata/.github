name: TDasset CI Test

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-TDasset-ci-test

jobs:
    build_and_test:
      runs-on: 
        group: CI
        labels: [self-hosted, Linux, X64, TDasset, ci]

      steps:
        - name: Generate GitHub App Token
          id: app-token
          uses: tibdex/github-app-token@v1
          with:
            app_id: ${{ vars.TAOSDATA_BOT_ID }}
            private_key: ${{ secrets.TAOSDATA_BOT_KEY }}

        - name: Checkout code
          uses: actions/checkout@v4
          with:
            repository: 'taosdata/TDasset'
            path: 'TDasset'
            token: ${{ steps.app-token.outputs.token }}
            ref: ${{ github.event.pull_request.head.ref}}

        - name: Checkout code taos-ui
          uses: actions/checkout@v4
          with:
            repository: 'taosdata/taos-ui'
            path: 'taos-ui'
            token: ${{ steps.app-token.outputs.token }}
            ref: 'main'

        - name: Setup taos-ui
          run: |
            cd taos-ui
            pnpm i --no-frozen-lockfile
            pnpm link taos-ui

        - name: Install TDasset frontend dependencies
          run: |
            cd TDasset/frontend
            pnpm i --no-frozen-lockfile

        - name: Build TDasset frontend
          run: |
            # set environment variables
            export DISABLE_OPENCOLLECTIVE=1
            export IMAGE_INLINE_SIZE_LIMIT=0
            export NODE_OPTIONS="--max-old-space-size=8192"
            # build TDasset frontend
            cd TDasset/frontend
            pnpm run build

        - name: Build tda-server
          run: |
            # copy build files to TDasset
            cp -r TDasset-ui/dist/* TDasset/tda-server/src/main/resources/META-INF/resources/
            echo "::group::Building backend"
            cd TDasset/tda-server && rm -rf data-test/*
            echo "Deleted test index and git data."
            mvn -T 10 package \
                -Dskip.tests=true \
                -Dquarkus.profile=prod \
                -Drevision=v1.0.0
            echo "::endgroup::"

        - name: Build tda-generator
          run: |
            echo "::group::Building tda-generator"
            cd TDasset/tda-generator
            mvn -T 10 clean package
            echo "::endgroup::"

        - name: Copy tda-generator , tda-server, ai chat-server
          run: |
            rm -rf /app/*
            cp TDasset/tda-generator/target/tda-generator-1.0-SNAPSHOT-generator.jar /app/tda-generator.jar 
            cp -r TDasset/ai/chat-server/src/*                                       /app/
            cp -r TDasset/tda-server/target/quarkus-app/lib                          /app/
            cp -r TDasset/tda-server/target/quarkus-app/app                          /app/
            cp -r TDasset/tda-server/target/quarkus-app/quarkus                      /app/
            cp TDasset/tda-server/target/quarkus-app/quarkus-run.jar                 /app/
            cp /data1/env/start.sh                                                   /app/
            cp -r /data1/huggingface/                                                /app/

        - name: Deploy TDasset
          run: |
            echo "::group::Deploying TDasset"
            cd /app
            export TDA_LOG_PATH=/app/logs
            export ALI_API_KEY=sk-f5bd847e50f042fabfad1f82a825f0b4
            chmod +x start.sh
            nohup ./start.sh > /dev/null 2>&1 &
            echo "::endgroup::"

        - name: Run UI Tests
          id: ui-test
          run: |
            for i in {1..30}; do
              if curl -sSf http://localhost:6042 > /dev/null; then
                echo "Service on port 6042 is up."
                break
              fi
              echo "Waiting for service on port 6042..."
              sleep 1
            done

            cd TDasset/frontend

            # set env
            pnpm run test:e2e:install
            NODE_ENV=ci.local pnpm run test:e2e
          continue-on-error: true

        - name: Send Feishu Message to Platform Alert Group
          if: ${{ failure() && github.event_name == 'schedule'}}
          run: |
            function post_to_feishu() {
              local text="$1"
              curl -X POST -H "Content-Type: application/json" \
              -d @- https://open.feishu.cn/open-apis/bot/v2/hook/02363732-91f1-49c4-879c-4e98cf31a5f3 <<EOF
              {
                  "msg_type": "text",
                  "content": {
                  "text": "$text"
                  }
              }
            EOF
            }
            
            PR_INFO="TDasset Daily CI 测试失败\n
            执行的workflow见：https://github.com/taosdata/TDasset/actions/runs/${{ github.run_id }}\n"
            
            post_to_feishu "$PR_INFO"

        - name: Trigger frontend build workflow
          # if: ${{ success() && github.event_name == 'schedule' }}
          if: ${{ github.event_name == 'pull_request' }}
          uses: benc-uk/workflow-dispatch@v1
          with:
            workflow: frontend-build.yml
            repo: taosdata/TDasset
            token: ${{ secrets.WORKFLOW_PAT }}

        - name: Upload Artifacts
          if: steps.ui-test.outcome == 'failure'
          uses: actions/upload-artifact@v4
          with:
            name: Playwright Test Reports
            path: TDasset/frontend/tests/e2e/test-reports
